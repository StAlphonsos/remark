<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook V4.2//EN" "http://docbook.org/xml/4.2/docbookx.dtd">
<!--  remark - lazy, sleazy plain text markup  -->
<!-- generated by remark 1.1.1 at Sat, 09 Aug 2003 at 14:48 -->
<!-- Time-stamp: <2011-08-25 23:19:12 attila@stalphonsos.com> -->
<!-- by attila@stalphonsos.com -->
<!-- Copyright (c) 1997-2003 by attila@stalphonsos.com.  All Rights Reserved -->
<book>
 <title> remark - lazy, sleazy plain text markup </title>
 <bookinfo>
  <author>
   <firstname>attila@stalphonsos.com</firstname>
  </author>
  <othercredit>
   <othername>Generated by remark 1.1.1 Sat, 09 Aug 2003 at 14:48</othername>
  </othercredit>
  <date>2003-07-31 16:03:34 EDT</date>
  <copyright>
   <year>1997-2003</year>
   <holder>attila@stalphonsos.com.  All Rights Reserved</holder>
  </copyright>
 </bookinfo>
 <preface>
  <title>Preface</title>
  <!-- CHAP:0 sects, 1 pars 10 words -->
  <para>
   This is remark, attila's lazy, sleazy plain text markup system.
  </para>
 </preface>
 <chapter>
  <title>Remark</title>
  <!-- CHAP:0 sects, 21 pars 575 words -->
  <para>
   <emphasis>The idea is simple</emphasis>: turn a file that looks more or less like this one
   right here into DocBook XML, and thence into whatever the hell you want.
   Remark supports popping out PS, PDF, and DVI output right now, with the help
   of some external tools.  RTF is easily possible, and HTML is coming.
  </para>
  <section>
  <title>Building Remark</title>
   <!-- SECT:7 paras, 110 words -->
   <para>
    Remark uses the standard perly build system fu:
   </para>
   <para>
    <literal>$ perl Makefile.PL</literal>
   </para>
   <para>
    <literal>$ make</literal>
   </para>
   <para>
    <literal>$ sudo make install</literal>
   </para>
   <para>
    If this does not work for you, please let me know.  I should beef up my
    dependency checking a bit, to make sure that jade or openjade is installed,
    at least, but right now, I don't check.  Also, if you are a BSD user, then
    you might not like Makefile.PL installing stuff into /usr/bin and /usr/lib
    instead of /usr/local/bin and /usr/local/lib, in which case I recommend:
   </para>
   <para>
    <literal>$ perl Makefile.PL PREFIX=/usr/local INSTALLDIRS=site</literal>
   </para>
   <para>
    instead.  This will force remark into /usr/local, as Pan intended.  Other
    than that, there's not much to installing remark.
   </para>
  </section>
  <section>
  <title>Emacs vs. The World</title>
   <!-- SECT:3 paras, 144 words -->
   <para>
    I am an Emacs person.  This means that all of this stuff is slanted
    towards Emacs users, but it's all perfectly usable by others.  It's just
    that the actual process of typing the text up is a bit easier if your editor
    understands all the magic goobers that appear e.g. at the bottom of this
    file (and in the template).
   </para>
   <para>
    If you <emphasis>are</emphasis> an Emacs person, then those goobers are very handy.  They
    configure your buffer such that hitting Meta-Q (fill-paragraph-or-region)
    does the right thing: as long as you indent your paragraphs with two spaces
    at the start, your text will stay pretty, and all of the section boundaries
    will be obeyed.
   </para>
   <para>
    It's also a good idea to get into the habit of ending sentences with two
    spaces.  Besides being good form, it also makes the sentence-based movement
    operators (Meta-A, Meta-E) work properly.
   </para>
  </section>
  <section>
  <title>Processing Text</title>
   <!-- SECT:8 paras, 168 words -->
   <para>
    The remark man page describes things fairly completely; you can also
    view this same information with the command
   </para>
   <para>
    <literal>$ remark -H | more</literal>
   </para>
   <para>
    You'll notice in the text above that I used underscores to set off some
    text that should be in a computer font, and that I've used stars to set
    off text that should be emphasised.  You can also use dollar signs, which
    I intend to be used for equations ala TeX, but it doesn't quite do all
    the right stuff yet... feel free to pitch in!
   </para>
   <para>
    In any event, if you just point remark at a text file with no other
    arguments, it will turn it into DocBook XML:
   </para>
   <para>
    <literal>$ remark README</literal>
   </para>
   <para>
    will turn this file into README.xml.  From there, you can do whatever
    you like, but remark knows how to do some additional post-processing,
    via the <literal>-R</literal> option:
   </para>
   <para>
    <literal>$ remark -R ps README</literal>
   </para>
   <para>
    will turn this file into README.ps, by using the <literal>jade</literal> (or <literal>openjade</literal>),
    <literal>jadetex</literal> and <literal>dvips</literal> programs, in that order.
   </para>
  </section>
  <section>
  <title>Bugs and Contributions</title>
   <!-- SECT:2 paras, 99 words -->
   <para>
    Bugs reports and contributions are always welcome.  Please email them to
    attila@stalphonsos.com with [remark] in the subject, so that my automatic
    spam filters (go go gadget bmf! go go gadget procmail!) will know to leave
    it alone.
   </para>
   <para>
    There should be a TODO file in the tarball that has a list of things that
    I would like to work on when I have time to spare.  If you want to pitch in,
    please let me know first, because I may have already started, and it would
    be a waste to have us both doing the same thing without coordinating.
   </para>
  </section>
 </chapter>
</book>
<!-- EOF -->
